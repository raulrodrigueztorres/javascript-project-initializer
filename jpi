#!/usr/bin/zsh

AUTHOR=""
PROJECT=""
DESCRIPTION=""

SYSTEM=""
SCRIPT_NAME=$0
SCRIPT_ROUTE=$(pwd)
DEPENDENCIES=(wget jq)

NPM_DEV_PACKAGES=(
    eslint 
    eslint-config-prettier 
    eslint-config-standard 
    eslint-plugin-import 
    eslint-plugin-node 
    eslint-plugin-prettier 
    eslint-plugin-promise 
    eslint-plugin-standard 
    gh-pages 
    parcel-bundler 
    prettier 
    stylelint 
    stylelint-config-standard
)

GITIGNORE="https://raw.githubusercontent.com/raulrodrigueztorres/javascript-project-initializer/main/.gitignore"
ESLINT="https://raw.githubusercontent.com/raulrodrigueztorres/javascript-project-initializer/main/.eslintrc"
PRETTIER="https://raw.githubusercontent.com/raulrodrigueztorres/javascript-project-initializer/main/.prettierrc"
STYLELINT="https://raw.githubusercontent.com/raulrodrigueztorres/javascript-project-initializer/main/.stylelintrc"


# This method is incomplete. Need to handle the installation of dependencies.
install_dependencies() {
    if [[ "$OSTYPE" == "darwin"* ]]; then
        SYSTEM='macOS'
    elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
        SYSTEM='linux'
    else
        "Invalid System!"
        exit 1
    fi

    for DEPENDENCY in ${DEPENDENCIES[@]}
    do
        if which $DEPENDENCY > /dev/null 2>&1; then
            echo Dependency $DEPENDENCY Installed!
        else
            echo $DEPENDENCY Dependency Not Found!
            exit 1
        fi
    done
}
        

display_help() {
    echo  "Usage: $SCRIPT_NAME -r [Directory Route] [options] [arguments]"
    echo
    echo "Options:"
    echo "   -r, --route                    route of the target directory"
    echo "   -p, --project                  name of the github repository"
    echo "   -a, --author                   name of the project author"
    echo "   -d, --description              description of the project for the package.json"
    echo "   -h, --help                     print script command line options"
    echo
    exit 0
}

while [[ $# -gt 0 ]]
do
    key="$1"

    case $key in
        -r | --route)
            ROUTE=$2
            shift
            shift
            ;;
        -p | --project)
            PROJECT=$2
            shift
            shift
            ;;
        -a | --author)
            AUTHOR=$2
            shift
            shift
            ;;
        -d | --description)
            DESCRIPTION=$2
            shift
            shift
            ;;
        -h | --help)
            display_help
            exit 0
            ;;
        *)
            echo Unknown option $1 >&2
            exit 1
            ;;
    esac
done

if [ "$ROUTE" = "" ]; then
    echo Must define -r --route option >&2
    exit 1
else

    if ! cd $ROUTE; then 
        exit 1
    fi

    printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -
    if install_dependencies; then 
        echo "\nDependencies Sucessfully Installed!"
    else
        exit 1
    fi
    printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -

    printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -
    if npm init -y > /dev/null 2>&1; then
        echo "NPM Initialized!"
    else   
        exit 1
    fi
    printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -

    printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -
    if cat package.json | jq '.description = "'$DESCRIPTION'"' | jq '.scripts = {
            "start": "parcel serve src/index.html --port 8000",
            "build": "parcel build src/index.html --public-url /'"$PROJECT"'/ -d build",
            "deploy": "gh-pages -d build",
            "eslint": "npx eslint src",
            "eslintFix": "npx eslint src --fix",
            "stylelint": "npx stylelint src/css/*.css",
            "format": "npx prettier --write src/*.html src/**/*.css src/**/*.js",
            "checkFormat": "npx prettier --check src/*.html src/**/*.css src/**/*.js"

    }' | jq '.author = "'$AUTHOR'"' | jq '.' > package.json; then
        echo "Project Information and Scripts Generated!"
    else 
        exit 1
    fi
    printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -

    printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -
    if git init > /dev/null 2>&1; then 
        echo "Git Repository Initialized!"
    else 
        exit 1
    fi
    printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -

    printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -
    if mkdir -p src/{css,js,assets} && touch src/index.html; then
        echo "Scaffolding Generated!"
    else 
        exit 1
    fi
    printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -

    printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -
    if wget -q --show-progress $GITIGNORE && wget -q --show-progress $ESLINT && wget -q --show-progress $PRETTIER && wget -q --show-progress $STYLELINT; then  
        echo "\nLinter's Configuration Files Downloaded!"
    else 
        exit 1
    fi
    printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -
    
    printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -
    for package in ${NPM_DEV_PACKAGES[@]}
    do
        if npm install -D $package; then 
            echo "\n$package Installed!"
        else
            echo "\nError with $package installation"
            exit 1
        fi
    done
    printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -
    echo "Done!"
fi
